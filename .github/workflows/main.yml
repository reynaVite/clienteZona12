name: CI Workflow for React + Vite

on:
  push:
    branches:
      - master
      - develop
      - feature/*
  pull_request:
    branches:
      - master
      - develop

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      # Descargar el código del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      # Cachear node_modules para reducir el tiempo de compilación
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Cachear Cypress para evitar descargas repetidas
      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cypress-

      # Instalar dependencias
      - name: Install dependencies
        run: npm install

      # Instalar Cypress si no está cacheado
      - name: Install Cypress
        run: npx cypress install

      # Ejecutar pruebas unitarias con Jest
      - name: Run unit tests
        run: npm run test

      # Compilar la aplicación Vite
      - name: Build Vite app
        run: npm run build

  e2e-tests:
    name: Cypress E2E Tests
    runs-on: ubuntu-latest
    needs: build-and-test  # Se ejecutará solo si el job anterior es exitoso

    steps:
      # Descargar el código del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      # Cachear node_modules para reducir el tiempo de compilación
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Cachear Cypress para evitar descargas repetidas
      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cypress-

      # Instalar dependencias
      - name: Install dependencies
        run: npm install

      # Iniciar el servidor de Vite en segundo plano
      - name: Start Vite server
        run: npm run dev &
        env:
          CI: true  # Asegura que Vite se ejecute en modo CI

      # Esperar a que el servidor esté listo
      - name: Wait for Vite to be ready
        run: npx wait-on http://localhost:5173

      # Ejecutar las pruebas E2E de Cypress
      - name: Run Cypress E2E tests
        run: npx cypress run

  notify:
    name: Send Email Notification
    runs-on: ubuntu-latest
    needs: [build-and-test, e2e-tests]  # Solo si ambos trabajos han sido ejecutados
    if: failure() || success()  # Notificar tanto si falla como si es exitoso

    steps:
      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Build ${{ job.status }}:${{ github.repository }}
          body: |
            The CI build has ${{ job.status }} for ${{ github.repository }}.
            Commit: ${{ github.sha }}
            Branch: ${{ github.ref }}
            Author: ${{ github.actor }}
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.EMAIL_USERNAME }}
